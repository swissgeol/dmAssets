INTERLIS 2.3;


!!****************************************
!! MODEL
!!****************************************
MODEL DMGeolAssets (de)
AT "mailto:U80773132@localhost"
VERSION "2021-08-16"  =


!!****************************************
!! IMPORTS
!!****************************************
  IMPORTS GeometryCHLV95_V1,Units;
  IMPORTS CatalogueObjects_V1,CatalogueObjectTrees_V1,LocalisationCH_V1;



!!****************************************
!! DOMAINES
!!****************************************
  DOMAIN
    !! Definition of line and surface
    Line = POLYLINE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord2;
    Surface = SURFACE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord2 WITHOUT OVERLAPS > 0.005;

    !! BAG OF with INTERLIS 2.3 only possible with STRUCTURE
    STRUCTURE PointStructure = 
      Point: GeometryCHLV95_V1.Coord2;
    END PointStructure;
        
    !!@ili2db.mapping=MultiPoint
    STRUCTURE MultiPoint =
      Points: BAG {1..*} OF PointStructure;
    END MultiPoint;
        
    STRUCTURE LineStructure = 
      Line: Line;
    END LineStructure;
        
    !!@ili2db.mapping=MultiLine
    STRUCTURE MultiLine =
      Lines: BAG {1..*} OF LineStructure;
    END MultiLine;
        
    STRUCTURE SurfaceStructure = 
      Surface: Surface;
    END SurfaceStructure;
        
    !!@ili2db.mapping=MultiSurface
    STRUCTURE MultiSurface =
      Surfaces: BAG {1..*} OF SurfaceStructure;
    END MultiSurface;

    !!Strukur für die Modellierung von Adressen
    STRUCTURE Adress =
      Street : TEXT*20;
      Housenumber : TEXT*5;
      PLZ : TEXT*5;
      Locality : MANDATORY TEXT*20;
      Country : MANDATORY TEXT*20;
    END Adress;

    STRUCTURE StID =
      ID : TEXT*50;
    END StID;

    !!Strukur für die Modellierung von mehrfachen IDs
    STRUCTURE StMulitID =
      MID : BAG {0..*} OF StID;
    END StMulitID;

    STRUCTURE StTextDescr =
      TextDescrAtt : TEXT*255;
    END StTextDescr;

    !!Strukur für die Modellierung von mehrfachen Texten
    STRUCTURE StMultiText =
      MultiTextDescrAtt : BAG {0..*} OF StTextDescr;
    END StMultiText;


!!****************************************
!! TOPIC 
!!****************************************
  TOPIC Basic =
    !! Definition einer UUID für alles Klassen im Modell
    OID AS INTERLIS.UUIDOID;

  END Basic;


!!****************************************
!! TOPIC 
!!****************************************
  TOPIC Catalogues =
  DEPENDS ON Basic;

!! Codelist für das Attribut Asset.Kind
    CLASS KindItem
    EXTENDS CatalogueObjectTrees_V1.Catalogues.Item =
      Name : MANDATORY LocalisationCH_V1.MultilingualText;
      Description : LocalisationCH_V1.MultilingualMText;
    END KindItem;

    STRUCTURE KindRef
    EXTENDS CatalogueObjectTrees_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) KindItem;
    END KindRef;

!! Codelist für das Attribut Asset.Topic
    CLASS TopicItem
    EXTENDS CatalogueObjectTrees_V1.Catalogues.Item =
      Name : MANDATORY TEXT;
      Description : TEXT;
    END TopicItem;

    STRUCTURE TopicRef
    EXTENDS CatalogueObjectTrees_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) TopicItem;
    END TopicRef;

!! Codelist für das Attribut Asset.Purpose
    CLASS PurposeItem
    EXTENDS CatalogueObjectTrees_V1.Catalogues.Item =
      Name : MANDATORY TEXT;
      Description : TEXT;
    END PurposeItem;

    STRUCTURE PurposeRef
    EXTENDS CatalogueObjectTrees_V1.Catalogues.CatalogueReference =
      Reference (EXTENDED) : REFERENCE TO (EXTERNAL) PurposeItem;
    END PurposeRef;

  END Catalogues;


!!****************************************
!! TOPIC 
!!****************************************
  TOPIC CoreGeolAsset =
  DEPENDS ON Basic, Catalogues; 
  
!!****************************************
!! CLASSES
!!****************************************
    !! CLASS
    CLASS AdminAssetBase (ABSTRACT) =

      !! Angabe, ob das Asset frei verfügbar (no) oder der Zugang eingeschränkt (yes) ist
      Restriction : MANDATORY BOOLEAN;

      !! Ablaufdatum der Zugriffsbeschränkung (Format: dd.mm.yyyy) Bemerkung: Wenn Restrict = yes, muss dieses Attribut ausgefüllt werden. Ist die Beschränkungsdauer unendlich bzw. unbestimmt, gilt: 31.12.9999. Für frei verfügbare Assets kann 01.01.1111 gesetzt werden.
      DateRestriction : FORMAT INTERLIS.XMLDate "1582-1-1" .. "2222-12-31";

      !! Link und Name des zugehörigen Files, inkl. Dateiendung (zur Kennzeichnung des Formats). Beispiel: tiefbohrung_abc.xlsx; http://www.meine- Domaene.ch/geothermie/tiefbohrungen.pdf; \\servername\meine-ablage\bohrprofil_01.jpg
      RelativePath : MANDATORY TEXT*254;

      !! UsedBy (Angabe der Projekte in den das Asset genutzt wurde)ERSETZT Attribut "Source" (In welchem Rahmen (z.B. in Projekt xy) wurde das Asset an die LG abgegeben?)
      UsedBy : StMultiText;
  
      !! Bearbeitungsstatus
      StatusWork : MANDATORY (
        !! zu kontrollieren
        toBeControled,
        !! kontrolliert
        controled,
        !! pendent
        pending,
        !! zu bearbeiten
        toBeEdited,
        !! in Bearbeitung
        inProgress,
        !! bearbeitet
        edited,
        !! zurueckgestellt
        postponed,
        !! publiziert
        published,
        !! freigegeben
        released
      );

      !! Nationale Relevanz des Assets
      NationalRelevance : MANDATORY (
        !! nicht von nationaler Bedeutung
        notRelevant,
        !! 3. Priorität
        prio3,
        !! 2. Priorität
        prio2,
        !! 1. Priorität
        prio1,
        !! nicht einer Kategorie zugeordnet
        notAssigned
      );

      !! Eingangsdatum des Assets
      DateReceipt : MANDATORY FORMAT INTERLIS.XMLDate "1582-1-1" .. "2222-12-31";

      !! Bemerkungen
      Remark : MTEXT*1800;

    MANDATORY CONSTRAINT
      Restriction <> #true OR DEFINED (DateRestriction);

    END AdminAssetBase;


    !! CLASS
    CLASS AdminAssetItem
    EXTENDS AdminAssetBase =
      !! Liegt im Asset Texterkennung vor?
      OCR : MANDATORY BOOLEAN;

      !! Qualität der Texterkennung
      OCRQuality : (
        high,
        low,
        medium
      );

      !! Physischer Standort des analogen Dokuments
      LocationAnalog : TEXT*20;

      !! Pfad zur Ablage des Administrativen Dokuments (z.B. Einwilligungsformular)
      RelativePathAdmin : TEXT*20;

    MANDATORY CONSTRAINT
      OCR <> #true OR DEFINED (OCRQuality);

    END AdminAssetItem;


    !! CLASS
    CLASS AdminAssetPackage
    EXTENDS AdminAssetBase =
      !! Berechtigungsstatus. Ist der Berechtigungsstatus des Assets geklärt oder müssen Abklärungen getroffen werden. Muss das Asset evtl. aufgeteitl werden.
      StatusRestriction : MANDATORY (
        !! Asset beinhaltet verschiedene Berechtigungsstufen. Assetteile trennen und separat erfassen
        differentStati,
        !! Berechtigungsstatus offen (Prüfung erforderlich)
        open,
        !! Berechtigungsstatus geklärt
        final
      );

      !! Projekt im Rahmen dessen das Assetpackage erstellt wurde
      Project : TEXT*80;
    
    END AdminAssetPackage;


    !! CLASS
    CLASS AssetBase (ABSTRACT) =
      TitlePublic : MANDATORY TEXT*80;
      DateCreation : MANDATORY FORMAT INTERLIS.XMLDate "1582-1-1" .. "2222-12-31";

    END AssetBase;


    !! CLASS
    CLASS AssetItem
    EXTENDS AssetBase =
      !! Art des Dokuments
      Kind : MANDATORY DMGeolAssets.Catalogues.KindRef;

      !! Beschreibung des Gegenstands der Thematik, in dem das Asset angesiedelt ist.
      Topic : BAG {1..*} OF DMGeolAssets.Catalogues.TopicRef;

      !! Fachlicher Grund/Zweck/Ziel, aus dem ein Asset erstellt wurde
      Purpose : BAG {1..*} OF DMGeolAssets.Catalogues.PurposeRef;

      !! Identifikator(en) (ID) des Asset. Wenn möglich soll die Original-ID verwendet werden.
      IDAlternate : StMulitID;

      !! ID, die von der LG vergeben wird (InfoGeol-Nr. oder Nachfolger)
      IDSGS : 0 .. 1000000000;

      !! Titel des Assets. Wenn möglich soll der Originaltitel verwendet werden.
      TitleOriginal : TEXT*80;

      !! Sprachversionen in denen das Asset vorliegt. Bei identischem Inhalt können mehrere Sprachversionen des selben Assets vorliegen. Bei gemischtsprachlichen Assets gilt die Sprache des Titels.
      Language : MANDATORY (
        !! Englisch
        EN,
        !! Italienisch
        IT,
        !! Französisch
        FR,
        !! Deutsch
        DE,
        !! für Dokumente/Files, die nur numerisch aufgebaut sind.
        NUM,
        !! andere Sprachen
        other
      );

      !! Pfad zu einer Online-Ressource des Files vom RelativePfad
      URL : TEXT*254;

      !! Formate des Assets. Bei identischem Inhalt kann das selbe Asset in verschiedenen Formaten vorliegen.
      !! TODO: MINE-Types definieren

      Format : MANDATORY (
        !! Weitere, nicht genannte Formate
        other,
        !! Analoge Dokumente (Papier, Mikrofichen etc.)
        textAnalog,
        !! Grafisch analoge Zeichnung
        graphicAnalog,
        !! Grafisch digitale Vektorgrafik
        GraphicVector,
        !! Grafisch digitale Rastergrafik
        GraphicRaster,
        !! Digitales binäres Format
        Binaer,
        !! Textformat (z.B.: ascii, txt, doc, docx, xls, xlsx, xml, csv etc.)
        textDigital,
        !! Seismikspezifische Formate (SPS, SEG2, SEGD, SEGY etc.)
        Seismic(
          SEGY,
          SEGY_exported,
          !! andere seismikspezifische Formate
          other
        ),
        !! PDF-Datei
        PDF,
        !! ESRI Shapefile
        SHP,
        !! Log-Files (Log ASCII Standard)
        LAS
      );

      !! Autoren des Dokuments. Insbesondere für wissenschaftliche Publikationen. Wenn kein Autor über die Klasse Contact abgebildet werden kann/soll. Beispiel: Müller Maja, Meier Hans / Müller M. et.al/ 
      AuthorBiblio : TEXT*200;

      AssetComposition : BAG {1..*} OF DMGeolAssets.Catalogues.KindRef;

      !! CONSTRAINTS
    MANDATORY CONSTRAINT
        Kind->Reference->Name->LocalisedText->Text=="report" OR DEFINED (TitlePublic);

    END AssetItem;


    !! CLASS
    CLASS AssetPackage
    EXTENDS AssetBase =

    END AssetPackage;


    !! CLASS
    CLASS GeometryOfInterest (ABSTRACT)=
      !! Qualität der Geometrie (korrekte Geometrie oder Platzhaltergeometrie)
      GeomQuality : MANDATORY (
        !! Stellvertretergeometie allgeimein, ohne eine konkret definierte Grösse
        placeholder,
        !! Stellvertretergeometrie grösser 100x100 km
        placeholder100x100,
        !! Stellvertretergeometrie 10x10 km
        placeholder10x10,
        !! Stellverteretergeometrie 1x1 km
        placeholder1x1,
        !! Der tatsächlichen Geometrie angenähert (Vereinfachung)
        simplification,
        !! so digitalisiert, wie die Geometrie voliegt
        orginal
      );

      !! Bemerkung zur Region of interest
      Remark : TEXT*254;

    END GeometryOfInterest;


    !! CLASS
    CLASS StudyLocation
    EXTENDS GeometryOfInterest =
      Geometry : MultiPoint;
    END StudyLocation;


    !! CLASS
    CLASS StudySection
    EXTENDS GeometryOfInterest =
      Geometry : MultiLine;
    END StudySection;


    !! CLASS
    CLASS StudyArea
    EXTENDS GeometryOfInterest =
      Geometry : MultiSurface;
    END StudyArea;


    !! CLASS
    CLASS Publication =
      !! Datum der Publikation
      DatePublication : MANDATORY FORMAT INTERLIS.XMLDate "1582-1-1" .. "2222-12-31";

      !! Publikationskanal, z.B.: Publikation auf verschiedenen Kanälen: map.geo.admin.ch, Zeitschrift, Konferenz (Abstract, Präsentation), etc.
      Channel : MANDATORY (
        !! Konferenz
        conference,
        !! Fachzeitschrift
        professionalJournal,
        !! Monografie, z.B. Buch, Lehrbuch etc.
        monograph,
        !! Internet
        internet(
          !! Geoportal des Bundes: map.geo.admin.ch
          mapGeoAdmin,
          !! OpenData-Portal: https://opendata.swiss
          openData,
          !! nicht spezifizierte Website
          undiff
        )
      );
      !! Konkreter Name des Kanals. Z.B. Layer xyz auf map.geo.admin.ch, Bulletin der angewandten Geowissenschaften, SGM 2019 - Session Geoscience and Geoinformation , etc.
      Description : TEXT*20;

      !! URL oder DOI etc. zur jeweilgen Publikation
      Link : TEXT*20;

    END Publication;


    !! CLASS
    CLASS Contact =
      !! Referenz auf einen Eintrag inder zentralen Adress-Datenbank (ZAD)
      IDZAD : TEXT*20;

      !! Information zur Art des Kontaktes (z.B. kantonale Bewilligungsbehörde, Bundesbehörde, Privatwirtschaft: begleitendes Fachbüro, etc.). Mindestkontakt ist nach Möglichkeit immer die Bewilligungsbehörde.
      Kind : MANDATORY (
        Bundesbehoerde,
        Andere,
        Uni_Fachhochschule,
        Gemeinde,
        Kantonale_Bewilligungsbehoerde,
        swisstopo
      );

      !! Name des Kontakts
      Name : MANDATORY TEXT*20;

      !! Adresse: die Struktur dieses Attributes ist in der Struktur "Adress" beschrieben
      Adress : STRUCTURE RESTRICTION ( DMGeolAssets.CoreGeolAsset.Adress );

      !! Telefon-Nr., gemäss definierter Struktur von Tel. Nummern
      Telefon : TEXT*20;

      !! e-mail-Adresse, gemäss definierter Struktur von e-mail-Adressen
      Email : TEXT*20;

      !! URL von Websites, gemäss definierter Struktur von URLs
      Website : TEXT*20;

    END Contact;


!!****************************************
!! ASSOCIATIONS
!!****************************************
    !! Jedes Objekt kann mit einem anderen in Beziehung stehen. Z.B.: Mehrere Dokumente zu einem Projekt; Objekte gleicher Stufe können in Beziehung stehen (Bericht - Bericht)
    ASSOCIATION Asset_Asset =
      AssetX -- {0..*} AssetItem;
      AssetY -- {0..*} AssetItem;
    END Asset_Asset;


    !! Ein Asset kann beliebig viele Teile (AssetParts) enthalten. Ein AssetPart gehört zu einem Asset
    ASSOCIATION AssetItem_AssetPart =
      !! AssetPart
      AssetPart -- {0..*} AssetItem;
      !! Asset aus dem der AssetPart extrahiert wurde
      AssetMain -- {0..1} AssetItem;
    END AssetItem_AssetPart; 


    !! Ein Asset ist Teil eines AssetPackages. Ein AssetPackage beinhaltet 0..* Assets
    ASSOCIATION AssetItem_AssetPackage =
      PackagedAsset -- {0..*} AssetItem;
      Package -- {1} AssetPackage;
    END AssetItem_AssetPackage;


  !! Beziehung von der Abstracten Klasse AssetBase zur Klasse Publikation
  ASSOCIATION AssetBase_Publication =
    AssetBase -- {1..*} AssetBase;
    Publication -- {0..*} Publication;
  END AssetBase_Publication;


    !! Untersuchungsgebiet zu einem Asset
    ASSOCIATION AssetBase_GeometryOfInterest =
      AssetBase -- {1} AssetBase;
      GeometryOfInterest -- {0..1} GeometryOfInterest;
    END AssetBase_GeometryOfInterest;


    !! Autor
    ASSOCIATION AssetBase_Contact_Author =
      AuthoredAsset -- {1..*} AssetBase;
      Author -- {0..*} Contact;
    END AssetBase_Contact_Author;

    !! Auftraggeber
    ASSOCIATION AssetBase_Contact_Initiator =
      InitiatedAsset -- {1..*} AssetBase;
      Initiator -- {0..*} Contact;
    END AssetBase_Contact_Initiator;

    !!  Einlieferer des Assets: Wenn nicht angegeben, dann entspricht der Einlieferer dem Autor.
    ASSOCIATION AssetBase_Contact_Supplier =
      SuppliedAsset -- {1..*} AssetBase;
      Supplier -- {0..*} Contact;
    END AssetBase_Contact_Supplier;


    ASSOCIATION AssetItem_AdminAssetItem =
      AdminedAsset -- {1} AssetItem;
      AdminAssetItem -- {1} AdminAssetItem;
    END AssetItem_AdminAssetItem;


    ASSOCIATION AssetPackage_AdminAssetPackage =
      AdminedAssetPackage -- {1} AssetPackage;
      AdminAssetPackage -- {1} AdminAssetPackage;
    END AssetPackage_AdminAssetPackage;

  END CoreGeolAsset;

END DMGeolAssets.
