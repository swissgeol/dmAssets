INTERLIS 2.3;

/** Datenmodell Geologische Assets zur Beschreibung der Metadaten von geologischen Assets
*/
MODEL GeolAssets_V2 (en)
AT "https://www.swisstopo.ch"
VERSION "2022-04-06" =
  IMPORTS GeometryCHLV95_V1,GeolAssetsCatalogues_V2;

  DOMAIN

    /** Definition von Linien- und Polygongeometrien
     */
    Line = POLYLINE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord2;

    Surface = SURFACE WITH (STRAIGHTS) VERTEX GeometryCHLV95_V1.Coord2 WITHOUT OVERLAPS>0.005;

  /** Struktur für die Modellierung von Adressen
   */
  STRUCTURE Address =
    Street : TEXT;
    Housenumber : TEXT;
    PLZ : 0 .. 99999;
    Locality : MANDATORY TEXT;
    Country : MANDATORY TEXT;
  END Address;

  /** Struktur für die Definition einer ID, die in einem BAG {0..*} verwendet werden kann
   */
  STRUCTURE ID =
    /** Identifikator
     */
    ID : MANDATORY TEXT;
    /** Beschreibung woher die jeweilige ID stammt (z.B. aus einem kantonalen Archiv), bzw. wann/von wem sie vergeben wurde
     */
    Descritption : TEXT;
  END ID;

  /** Topic des Kernmodells
   */
  TOPIC GeolAssets =
    OID AS INTERLIS.UUIDOID;
    DEPENDS ON GeolAssetsCatalogues_V2.Catalogues;

    /** Klasse der Metadaten eines Assets
     */
    CLASS AssetItem =
      /** Öffentlicher Titel des Assets. Dieser enthält keine sensiblen Angaben
       */
      TitlePublic : TEXT;
      /** Titel des Assets. Wenn möglich soll der Originaltitel verwendet werden. Falls der Originaltitel sensible Daten enthält, kann hier ein öffentlich nutzbarer Titel vergeben werden.
       */
      TitleOriginal : MANDATORY TEXT;
      /** Identifikator(en) (ID) des Assets. Wenn möglich soll die Original-ID verwendet werden.
       */
      IDAlternate : BAG {0..*} OF GeolAssets_V2.ID;
      /** Art des Assets
       */
      Kind : MANDATORY GeolAssetsCatalogues_V2.Catalogues.AssetKindRef;
      /** Manuell vergebe Label für das Thema oder den Zweck des Dokuments
       */
      ManCatLabel : BAG {1..*} OF GeolAssetsCatalogues_V2.Catalogues.ManCatLabelRef;
      /** Datum der Erstellung des Assets.
       */
      DateCreation : MANDATORY FORMAT INTERLIS.XMLDate "1582-1-1" .. "2222-12-31";
      /** Sprachversion in der das Asset vorliegt. Bei gemischt sprachlichen Assets gilt die Sprache des Titels.
       */
      Language : MANDATORY GeolAssetsCatalogues_V2.Catalogues.LanguageRef;
      /** Formate des Assets.
       */
      Format : MANDATORY GeolAssetsCatalogues_V2.Catalogues.AssetFormatRef;
      /** Autoren des Dokuments. Insbesondere für wissenschaftliche Publikationen. Wenn kein Autor über die Klasse Contact abgebildet werden kann/soll. Beispiel: Müller Maja, Meier Hans / Müller M. et.al/
       */
      AuthorBiblio : TEXT;
      /** Projekt im Rahmen dessen das Asset erstellt wurde
       */
      SourceProject : TEXT;
      /** Beschreibung des Assets
       */
      Description : TEXT;
      /** Zusammensetzung eines Assets, sofern es sich um AssetMain handelt. Die Werte entsprechen denen des AssetKinds
       */
      AssetComposition : BAG {0..*} OF GeolAssetsCatalogues_V2.Catalogues.AssetKindRef;
      /** Formate in einem Asset, sofern es sich um ein Package handelt
      */
      FormatComposition : BAG {0..*} OF GeolAssetsCatalogues_V2.Catalogues.AssetFormatRef;
      /** Flag zur Anzeige, dass es sich bei dem vorliegenden Asset um einen Extrakt aus einem Asset handelt, z.B. Bohrprofil aus einem Bericht: default ist "False"
       */
      IsExtract : MANDATORY BOOLEAN;

      /** Wenn IsExtract gesetzt (es handelt sich dann um ein extrahiertes Objekt, z.B. Bohrprofil aus einem Bericht), dann darf Kind nicht "report" oder "package" sein. Sonst darf IsExtract nicht gesetzt sein.
      */
      SET CONSTRAINT WHERE IsExtract: 
      NOT (Kind->Reference->Code == "package") AND 
      NOT (Kind->Reference->Code == "report");

      /** Wenn Kind == Package, dann muss Format == Archiv (zip) sein
      */
      SET CONSTRAINT WHERE Kind->Reference->Code == "package": 
      Format->Reference->Code == "zip";

      /** Wenn Format == Archiv (zip), dann muss Kind == Package sein
      */
      SET CONSTRAINT WHERE Format->Reference->Code == "zip": 
      Kind->Reference->Code == "package";

      /** FormatComposition darf nur ausgefüllt sein, wenn für das Format "zip" gewählt wurde
      */
      SET CONSTRAINT WHERE DEFINED (FormatComposition): 
      Format->Reference->Code == "zip";

      /** Wenn FormatComposition ausgefüllt ist, muss für das Format "zip" gewählt werden
      */
      SET CONSTRAINT WHERE Format->Reference->Code == "zip": 
      DEFINED (FormatComposition);
    END AssetItem;

    /** Basisklasse für die Beschreibung der Geometrien
     */
    CLASS GeometryOfInterest (ABSTRACT) =
      /** Qualität der Geometrie (korrekte Geometrie oder Platzhaltergeometrie)
       */
      GeomQuality : GeolAssetsCatalogues_V2.Catalogues.GeomQualityRef;
    END GeometryOfInterest;

    /** Klasse für Punktgeometrien
     */
    CLASS StudyLocation
    EXTENDS GeometryOfInterest =
      Geometry : GeometryCHLV95_V1.Coord2;
    END StudyLocation;

    /** Klasse für Liniengeometrien
     */
    CLASS StudyTrace
    EXTENDS GeometryOfInterest =
      Geometry : Line;
    END StudyTrace;

    /** Klasse für Polygongeometrien
     */
    CLASS StudyArea
    EXTENDS GeometryOfInterest =
      Geometry : Surface;
    END StudyArea;

    /** Klasse für die Beschreibung der Kontakte (Autor, Auftragnehmer (Contractor) oder Auftraggeber/Rechteinhaber (Initiator))
     */
    CLASS Contact =
      /** Information zur Art des Kontaktes (z.B. kantonale Bewilligungsbehörde, Bundesbehörde, Privatwirtschaft: begleitendes Fachbüro, etc.). Mindestkontakt ist nach Möglichkeit immer die Bewilligungsbehörde.
       */
      Kind : MANDATORY GeolAssetsCatalogues_V2.Catalogues.ContactKindRef;
      /** Name des Kontakts
       */
      Name : MANDATORY TEXT;
      /** Adresse des Kontakts
       */
      Address : Address;
      /** Telefon-Nr., gemäss definierter Struktur von Tel. Nummern
       */
      Telefon : TEXT;
      /** e-mail-Adresse, gemäss definierter Struktur von e-mail-Adressen
       */
      Email : URI;
      /** URL von Websites, gemäss definierter Struktur von URLs
       */
      Website : URI;
    END Contact;

    /** Jedes Objekt kann mit einem anderen in Beziehung stehen. Z.B.: Mehrere Dokumente zu einem Projekt; Objekte gleicher Stufe können in Beziehung stehen (Bericht - Bericht)
     */
    ASSOCIATION AssetItemX_AssetItemY =
      /** Asset X aud der Klasse AssetItem
      */
      AssetItemX -- {0..*} AssetItem;
      /** Asset Y aud der Klasse AssetItem
      */
      AssetItemY -- {0..*} AssetItem;
    END AssetItemX_AssetItemY;

    /** Ein Asset kann beliebig viele Assets oder Teile (Extracts) (AssetParts) enthalten. Ein AssetPart gehört zu einem AssetMain
     */
    ASSOCIATION AssetItemMain_AssetItemPart =
      /** Asset, dass andere Assets oder Teile davon enthält
       */
      AssetItemMain -- {0..1} AssetItem;
      /** Asset oder Teil eines Assets, dass in einem anderen Asset enthalten ist
       */
      AssetItemPart -- {0..*} AssetItem;
      
      /** Ein "AssetPart" darf nur ein "Extract" sein, wenn das zugehörige "AssetMain" selber kein "Extract" ist und es selber (das "AssetMain") nicht vom "Kind" == "package" ist. Ein Package darf kein Extract enhalten
      */
      SET CONSTRAINT WHERE AssetItemPart->IsExtract: NOT(AssetItemMain->IsExtract) AND NOT(AssetItemMain->Kind->Reference->Code == "package");
      /** Wenn ein "AssetPart" kein "Extract" ist, dann muss das zugehörige "AssetMain" ein "Kind" == "package" sein
      */
      SET CONSTRAINT WHERE NOT( AssetItemPart->IsExtract): AssetItemMain->Kind->Reference->Code == "package";
      /**Ein "AssetPart" darf selber nicht vom "Kind" == "package" sein
      */
      MANDATORY CONSTRAINT NOT(AssetItemPart->Kind->Reference->Code == "package");


    END AssetItemMain_AssetItemPart;

    /**Jedes AssetPart, dass ein Extract ist, muss ein Main besitzen*/
    CONSTRAINTS OF AssetItem =
      SET CONSTRAINT WHERE IsExtract:
        DEFINED(\AssetItemMain);
    END;
        
    /** Ein Asset kann 0 ..** Untersuchungsgebiete haben
     */
    ASSOCIATION AssetItem_GeometryOfInterest =
      AssetItem -<#> {1} AssetItem;
      GeometryOfInterest -- {0..*} GeometryOfInterest;
    END AssetItem_GeometryOfInterest;

    /** Ein Asset hat 0..* Autoren
     */
    ASSOCIATION AssetItem_Contact_Author =
      AuthoredAssetItem -- {0..*} AssetItem;
      Author -- {0..*} Contact;
    END AssetItem_Contact_Author;

    /** Ein Asset hat 0..* Auftraggeber und/oder Rechteinhaber
     */
    ASSOCIATION AssetItem_Contact_Initiator =
      InitiatedAssetItem -- {0..*} AssetItem;
      Initiator -- {0..*} Contact;
    END AssetItem_Contact_Initiator;

    /** EinAsset hat 0..* Einlieferer: Wenn nicht angegeben, dann entspricht der Einlieferer dem Autor.
     */
    ASSOCIATION AssetItem_Contact_Supplier =
      SuppliedAssetItem -- {0..*} AssetItem;
      Supplier -- {0..*} Contact;
    END AssetItem_Contact_Supplier;

    /** Ein Contact muss in mindestens einer Beziehung mit dem AssetItem verknüpft sein.
    */
    CONSTRAINTS OF Contact =
      MANDATORY CONSTRAINT DEFINED(\AuthoredAssetItem) OR DEFINED(\InitiatedAssetItem) OR DEFINED(\SuppliedAssetItem);
    END;
  END GeolAssets;

END GeolAssets_V2.
